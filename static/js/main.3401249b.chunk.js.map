{"version":3,"sources":["Singleton.js","Context/reducer.js","Context/context.js","views/nav.js","views/resume.js","views/home.js","views/about.js","views/banner.js","views/mainview.js","App.js","index.js"],"names":["params","loc","indexOf","this","domainName","slice","window","location","href","localStorage","getItem","createContext","Nav","className","to","Resume","Home","useState","projectList","map","p","key","id","title","desc","tech","url1","url2","About","Banner","SocialComp","o","url","src","img","alt","MainView","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"4RAOkB,IALhB,WAAYA,GAAS,oBACnB,IAAIC,EAAMD,EAAOE,QAAQ,IAAK,GAC9BC,KAAKC,WAAaJ,EAAOK,MAAM,EAAGJ,GAAO,qBAG3B,CAAYK,OAAOC,SAASC,MCSjCC,aAAaC,QAAQ,eACpBD,aAAaC,QAAQ,eCCVC,0BAcGA,0BCZbC,MAhBf,WACE,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,UAAjC,SAGA,kBAAC,IAAD,CAASD,UAAU,WAAWC,GAAG,WAAjC,gBAGA,kBAAC,IAAD,CAASD,UAAU,WAAWC,GAAG,KAAjC,UCFSC,MATf,WACE,OACE,yBAAKF,UAAU,aACb,wCCkDSG,MArDf,WAAiB,IAAD,EACYC,mBAAS,MADrB,gCAGkBA,oBAAS,IAH3B,mBAmCRC,GAnCQ,UAIG,CACf,CACE,GAAM,IACN,MAAS,2BACT,MAAS,GACT,KAAQ,gQACR,KAAQ,wCACR,KAAQ,+CACR,KAAQ,gDAEV,CACE,GAAM,IACN,MAAS,eACT,MAAS,GACT,KAAQ,0RACR,KAAQ,mBACR,KAAQ,0CACR,KAAQ,2CAEV,CACE,GAAM,IACN,MAAS,iBACT,MAAS,GACT,KAAQ,yRACR,KAAQ,0CACR,KAAQ,2CACR,KAAQ,8CAKiBC,KAAI,SAACC,GAAD,OAC/B,yBAAKP,UAAU,OAAOQ,IAAKD,EAAEE,IAC3B,wBAAIT,UAAU,WAAWO,EAAEG,OAC3B,2BAAIH,EAAEI,MACN,+CAAqBJ,EAAEK,MACvB,uBAAGjB,KAAMY,EAAEM,MAAX,gBAJF,MAIsC,uBAAGlB,KAAMY,EAAEO,MAAX,eAKxC,OACE,yBAAKd,UAAU,aACZK,EACD,sCClCSU,MAdf,WACE,OACE,yBAAKf,UAAU,aACb,0CC8BSgB,MAhCf,WACE,IAeMC,EAfU,CACd,CACE,GAAM,IACN,KAAQ,SACR,IAAO,kBACP,IAAO,mCAET,CACE,GAAM,IACN,KAAQ,WACR,IAAO,oBACP,IAAO,wDAIgBX,KAAI,SAACY,GAAD,OAC7B,uBAAGvB,KAAMuB,EAAEC,IAAKX,IAAKU,EAAET,IACrB,yBAAKT,UAAU,OAAOoB,IAAKF,EAAEG,IAAKC,IAAI,oBAI1C,OACE,6BACE,yBAAKtB,UAAU,UAEZiB,K,MCbMM,MAXf,WAGE,OACE,yBAAKvB,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,IAAD,QCwDSwB,EA7CH,WACV,OACE,yBAAKxB,UAAU,OA6Bb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACE,kBAAC,IAAD,CAAQyB,KAAK,IAAIC,QAAS,kBAAC,EAAD,OACxB,kBAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,kBAAC,EAAD,QACtB,kBAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,kBAAC,EAAD,QAC9B,kBAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,kBAAC,EAAD,YCtD3CE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3401249b.chunk.js","sourcesContent":["// 將函式轉為es2016類別;\nclass Getname {\n  constructor(params) {\n    let loc = params.indexOf(\":\", 6);\n    this.domainName = params.slice(0, loc) + \":8080/reirasys_api\";\n  }\n}\nconst Singleton = new Getname(window.location.href);\n// const Singleton = {\n//   domainName: domainName,\n// };\n\n// export const domainName = createContext(initialState);\nexport default Singleton;\n\n// class Singleton {\n//   constructor () {\n//     this.domainName = window.location.href\n//     const loc = this.domainName.indexOf(':', 6)\n//     this.domainName = this.domainName.slice(0, loc) + \":8080\"\n\n//   }\n// }\n// const singleton = new Singleton\n// export default singleton\n\n// const Singleton = () => {\n//   let domainName = window.location.href;\n//   let loc = domainName.indexOf(\":\", 6);\n//   domainName = domainName.slice(0, loc) + \":8080\";\n//   // return domainName;\n\n// };\n// export default Singleton ;\n","// AuthReducer 管理狀態及改變，根據(initialState, action)\n// 定義reducer(lState, action)\n// 參數state: 當前的initialState\n// 參數action: 子元素傳來的參數\n// 回傳值: 新的state的值。==>改變後的\n// login的狀態:userno IsLogin\n\n// define inital state,and return new state\n// let userno = localStorage.getItem(\"currentUser\")\n//   ? JSON.parse(localStorage.getItem(\"currentUser\")).userno\n//   : \"\";\n\n// let IsLogin = localStorage.getItem(\"currentUser\")\n//   ? JSON.parse(localStorage.getItem(\"currentUser\")).IsLogin\n//   : \"\";\n\nlet userno = localStorage.getItem(\"currentUser\") ? \"000002\" : \"\";\nlet IsLogin = localStorage.getItem(\"currentUser\") ? \"true\" : \"\";\n\nexport const initialState = {\n  userno: \"\" || userno,\n  IsLogin: false || IsLogin,\n  loading: false,\n  errorMessage: null,\n};\n\nexport const AuthReducer = (initialState, action) => {\n  // console.log(action.payload)\n  switch (action.type) {\n    case \"REQUEST_LOGIN\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...initialState,\n        userno: action.payload.userno,\n        IsLogin: action.payload.IsLogin,\n        loading: false,\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState,\n        user: \"\",\n        IsLogin: false,\n      };\n    case \"LOGIN_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, AuthReducer } from './reducer';\n\n// Context: 1、createContext，建立global state\n//          2、useContext     讀取context  \n// 建立Provider 包住想傳遞的子元件\n\n// 1' useAuthState : 判斷登入狀態的Context{ errorMessage, IsLogin } \n// 2' useAuthDispatch: \n// const dispatch = useAuthDispatch();\n// fetch api user資料 await loginUser(dispatch, formList)\n// 3' AuthProvider;\n\n// 1 useAuthState:登入狀態的Context\n//   userno: \"\" || userno,\n//   IsLogin: false || IsLogin,\n//   loading: false,\n//   errorMessage: null,\nconst AuthStateContext = createContext();\nexport function useAuthState() {\n  const context = useContext(AuthStateContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useAuthState must be used within a AuthStateContext Provider\");\n  }\n  return context;\n}\n\n//2 useAuthDispatch:login/logout\n//  使用方式 const dispatch = useAuthDispatch();\n//   const handleLogout = async () => {\n//   let response = await logOut(dispatch);\nconst AuthDispatchContext = createContext();\nexport function useAuthDispatch() {\n  const context = useContext(AuthDispatchContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useAuthDispatch must be used within a AuthDispatchContext Provider\"\n    );\n  }\n\n  return context;\n}\n\n//private router\n//使用Context的方法是使用<名稱.Provider value={state值}>\n//把你想要允許可以讀取這個context的子元素階層包起來 \n// AuthProvider 父元素使用context:用 AuthStateContext\n\n//最外一層：規劃login true 才能使用各routes\n//最外第二層：login true，才能使用各個dispatch\n\n//引入useReducer，取得state和dispatch。 useReducer(reducer函式, state的初始值);\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n                    // AuthReducer = (initialState, action);\n  return (\n    <AuthStateContext.Provider value={state}>\n      <AuthDispatchContext.Provider value={dispatch}>\n        {children}\n      </AuthDispatchContext.Provider>\n    </AuthStateContext.Provider>\n  );\n};\n","import React from 'react';\n\nimport { NavLink } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar\">\n      <NavLink className=\"nav-item\" to=\"/about\">\n        About\n      </NavLink>\n      <NavLink className=\"nav-item\" to=\"/resume\">\n        Résumé\n      </NavLink>\n      <NavLink className=\"nav-item\" to=\"/\">\n        Home\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\n\nfunction Resume() {\n  return (\n    <div className=\"container\">\n      <h1>RESUME</h1>\n   \n    </div>\n  );\n}\n\nexport default Resume;","import React, { useState, useEffect } from 'react';\n\nfunction Home() {\n  const [error, setError] = useState(null);\n  // const [projects, setProjects] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const projects = [\n    {\n      \"id\": \"0\",\n      \"title\": \"data application project\",\n      \"cover\": \"\",\n      \"desc\": \"I was tasked to output data from a JSON file through a web application, using React. I decided to make a visualization depicting four of my favorite Aphex Twin albums, as well as the tracklist/description of the chosen album, along with playable tracks.\",\n      \"tech\": \"React.js, JSON, Node.js, GitHub Pages\",\n      \"url1\": \"https://mramirez0610.github.io/project2repo/\",\n      \"url2\": \"https://github.com/mramirez0610/project2repo\"\n    },\n    {\n      \"id\": \"1\",\n      \"title\": \"landing page\",\n      \"cover\": \"\",\n      \"desc\": \"As a personal project, I took it upon myself to create a landing page that followed the layout of CMS's, such as Carrd.co or LinkTree, that allow you to create simple landing pages using premade HTML and CSS components. Though it's simple, I plan to add more to it in the future.\",\n      \"tech\": \"HTML, CSS, p5.js\",\n      \"url1\": \"https://mramirez0610.github.io/landing/\",\n      \"url2\": \"https://github.com/mramirez0610/landing\"\n    },\n    {\n      \"id\": \"2\",\n      \"title\": \"portfolio page\",\n      \"cover\": \"\",\n      \"desc\": \"You're here right now! I decided to create this page as a central source that displays all my Front-End endeavors. I made this site using React, as well as React-Router. I wanted to heavily focus on responsive design this project, and I feel that it translates nicely to mobile.\",\n      \"tech\": \"React, React-Router, JSON, Github Pages\",\n      \"url1\": \"https://mramirez0610.github.io/portfolio\",\n      \"url2\": \"https://github.com/mramirez0610/portfolio\"\n    }\n  ]\n \n\n  const projectList = projects.map((p) => (\n    <div className=\"card\" key={p.id}>\n      <h1 className='heading'>{p.title}</h1>\n      <p>{p.desc}</p>\n      <p>Technology used: {p.tech}</p>\n      <a href={p.url1}>live version</a> | <a href={p.url2}>github</a>\n    </div>\n  ));\n\n \n  return (\n    <div className=\"container\">\n      {projectList}\n      <h1>HOME</h1>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"container\">\n      <h1>about me</h1>\n      {/* <div className=\"text-container\">\n        <div className='card'>\n          <h1 className='heading'>about me</h1>\n        </div>\n\n      </div> */}\n    </div>\n  );\n}\n\nexport default About;","import React from \"react\";\n \n\nfunction Banner() {\n  const socials = [\n    {\n      \"id\": \"0\",\n      \"name\": \"github\",\n      \"img\": \"svgs/github.svg\",\n      \"url\": \"https://github.com/mramirez0610\"\n    },\n    {\n      \"id\": \"2\",\n      \"name\": \"linkedIn\",\n      \"img\": \"svgs/linkedin.svg\",\n      \"url\": \"https://www.linkedin.com/in/marco-ramirez-01a3611aa\"\n    }\n  ];\n\n  const SocialComp = socials.map((o) => (\n    <a href={o.url} key={o.id} >\n      <img className=\"icon\" src={o.img} alt=\"social-icon\" />\n    </a>\n  ));\n\n  return (\n    <div>\n      <div className=\"banner\">\n       \n        {SocialComp}\n      </div>\n    </div>\n  );\n}\n\nexport default Banner;","import React from 'react';\nimport Banner from './banner';\nimport \"./views.css\"\nimport { Outlet } from \"react-router-dom\";\n\nfunction MainView() {\n\n  //react-router is so cool what the hell\n  return (\n    <div className=\"mainView\">\n      <Banner />\n      <Outlet />\n    </div>\n  );\n}\n\nexport default MainView;","import React from 'react';\nimport { Routes, Route, BrowserRouter ,HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/index.scss';\n\n \nimport Login from './Components/main/Login';\n// import About from './Components/about/About';\n// import Inbox from './Components/mailbox/Inbox';\n// import PoForm from './Components/PoForm';\n// import PrForm from './Components/PrForm';\n// import PrivateRoute from './PrivateRoute';\n// import { AuthProvider } from './Context';\nimport Nav from './views/nav'\nimport Resume from './views/resume';\nimport Home from './views/home';\nimport About from './views/about';\nimport MainView from './views/mainview';\n\nimport Header from './Header';\nimport  PageNotFound  from './Components/PageNotFound';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      {/* <div className=\"page\"> */}\n        {/* <BrowserRouter> */}\n\n        {/* <HashRouter>\n          <AuthProvider>\n            <Header />\n            <Routes>  \n              <Route path=\"/\" element={<Login />} />\n              <Route  path='/' element={<PrivateRoute />}> \n                <Route path=\"/PrForm\" element={<PrForm />} />\n                <Route path=\"/PoForm\" element={<PoForm />} /> \n                <Route path=\"/About\" element={<About />} />\n                <Route path=\"/Inbox\" element={<Inbox />} />\n              </Route>\n              <Route path=\"*\" element={<PageNotFound />} />\n            </Routes>\n          </AuthProvider>\n        </HashRouter>  */}\n\n         \n\n        {/* <Route path=\"/\" element={<Home />}></Route>\n        <Route path=\"/about\" element={<About />}></Route>\n        <Route path=\"/project\" element={<Project />}></Route>\n        <Route path=\"/contact\" element={<Contact />}></Route> */}\n        {/* </BrowserRouter> */}\n\n\n      <BrowserRouter>\n        <Nav />\n          <Routes path='/' element={<MainView />}>\n            <Route index element={<Home />} />\n            <Route path='/about' element={<About />} />\n            <Route path='/resume' element={<Resume />} />\n          </Routes  > \n        </BrowserRouter>\n        \n      {/* </div> */}\n    </div>\n  );\n};\n\nexport default App;\n\n//login should not be autoprovider\n\n// Switch：用來包Route與Redirect，\n// 只會render第一個與網址匹配的<Route>的component\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App' \n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}